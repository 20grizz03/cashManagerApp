package TgBot

import (
	"cachManagerApp/app/internal/methodsForAnalytic/methodsForSummary"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

func PushOnAnalyticButton(bot *tgbotapi.BotAPI, update tgbotapi.Update, buttonCreator TelegramButtonCreator, command string) {
	switch command {
	case "üõç –ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º":
		category := buttonCreator.CreateCategoryAnalyticButtons()
		msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥")
		msg.ReplyMarkup = category
		if _, err := bot.Send(msg); err != nil {
			log.Printf("Failed to send main menu: %v", err)
		}

	case "üíÖ –Ω–µ–¥–µ–ª—è":
		report, err := methodsForSummary.AnalyseByCategoriesWeek(update)
		if err != nil {
			msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
			_, _ = bot.Send(msg)
			log.Printf("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞ –¥–µ–Ω—å: %v", err)
			return
		}
		msg := tgbotapi.NewMessage(update.Message.Chat.ID, report)
		_, _ = bot.Send(msg)

	case "ü§≥ –º–µ—Å—è—Ü":
		report, err := methodsForSummary.AnalyseByCategoriesMonth(update)
		if err != nil {
			msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
			_, _ = bot.Send(msg)
			log.Printf("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞ –¥–µ–Ω—å: %v", err)
			return
		}
		msg := tgbotapi.NewMessage(update.Message.Chat.ID, report)
		_, _ = bot.Send(msg)
	}
}
